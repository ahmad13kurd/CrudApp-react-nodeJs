{"ast":null,"code":"var _jsxFileName = \"/home/ahmad/Downloads/html5up-massively/crudapp/src/components/CourseList.js\";\nimport React, { Component, Fragment } from 'react';\nimport \"../App.css\";\n\nclass CourseList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isEdit: false,\n      courseName: '' // render Course\n\n    };\n\n    this.renderCourse = () => {\n      return React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, this.props.courses.map((course, index) => {\n        return React.createElement(Fragment, {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          className: \"elements\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }, this.propse.details.name), React.createElement(\"button\", {\n          onClick: () => {\n            this.toggleState(course.name);\n          },\n          className: \"btn\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, \"Edit Course\"), React.createElement(\"button\", {\n          className: \"btn\",\n          onClick: () => {\n            this.props.deleteCourse(this.props.index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, \"delete\")));\n      }));\n    };\n\n    this.toggleState = courseName => {\n      let isEdit = this.state.isEdit;\n      this.setState({\n        isEdit: !isEdit\n      });\n    };\n\n    this.renderUpdateForm = () => {\n      return React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: \"elements\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, this.propse.details.name), React.createElement(\"input\", {\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Update Course\"))));\n    };\n  }\n\n  render() {\n    let isEdit = this.state.isEdit;\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, isEdit ? this.renderUpdateForm() : this.renderCourse());\n  }\n\n}\n\nexport default CourseList;","map":{"version":3,"sources":["/home/ahmad/Downloads/html5up-massively/crudapp/src/components/CourseList.js"],"names":["React","Component","Fragment","CourseList","state","isEdit","courseName","renderCourse","props","courses","map","course","index","propse","details","name","toggleState","deleteCourse","setState","renderUpdateForm","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,YAAP;;AACA,MAAMC,UAAN,SAAyBF,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAE/BG,KAF+B,GAExB;AACHC,MAAAA,MAAM,EAAG,KADN;AAEHC,MAAAA,UAAU,EAAE,EAFT,CAKP;;AALO,KAFwB;;AAAA,SAQ/BC,YAR+B,GAQhB,MAAI;AACf,aACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,KAAKC,KAAL,CAAWC,OAAX,CAAmBC,GAAnB,CAAuB,CAACC,MAAD,EAAQC,KAAR,KAAgB;AACpC,eACE,oBAAC,QAAD;AAAU,UAAA,GAAG,EAAEA,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAI,UAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAO,KAAKC,MAAL,CAAYC,OAAZ,CAAoBC,IAA3B,CADF,EAEE;AAAQ,UAAA,OAAO,EAAI,MAAI;AAAC,iBAAKC,WAAL,CAAiBL,MAAM,CAACI,IAAxB;AAA8B,WAAtD;AAAwD,UAAA,SAAS,EAAC,KAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFF,EAGE;AAAQ,UAAA,SAAS,EAAC,KAAlB;AAAwB,UAAA,OAAO,EAAE,MAAK;AAAC,iBAAKP,KAAL,CAAWS,YAAX,CAAwB,KAAKT,KAAL,CAAWI,KAAnC;AAA0C,WAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,CADF,CADF;AASF,OAVD,CAFJ,CADL;AAkBH,KA3B8B;;AAAA,SA+B/BI,WA/B+B,GA+BhBV,UAAD,IAAgB;AAAA,UACpBD,MADoB,GACT,KAAKD,KADI,CACpBC,MADoB;AAE1B,WAAKa,QAAL,CAAc;AACVb,QAAAA,MAAM,EAAE,CAACA;AADC,OAAd;AAGH,KApC8B;;AAAA,SAuC/Bc,gBAvC+B,GAuCZ,MAAI;AACvB,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACM;AAAI,QAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAO,KAAKN,MAAL,CAAYC,OAAZ,CAAoBC,IAA3B,CADJ,EAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAHJ,CADN,CADJ,CADF;AAWD,KAnDgC;AAAA;;AAwD/BK,EAAAA,MAAM,GAAG;AAAA,QAEAf,MAFA,GAEU,KAAKD,KAFf,CAEAC,MAFA;AAIL,WACG,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACMA,MAAM,GAAG,KAAKc,gBAAL,EAAH,GAA6B,KAAKZ,YAAL,EADzC,CADH;AAKH;;AAjE8B;;AAoEnC,eAAeJ,UAAf","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport \"../App.css\";\nclass CourseList extends Component {\n\n    state ={\n        isEdit : false,\n        courseName: ''\n    }\n\n    // render Course\n    renderCourse = ()=>{\n        return (\n             <ul>\n             {\n                 this.props.courses.map((course,index)=>{\n                    return (\n                      <Fragment key={index}>\n                        <li className=\"elements\">\n                          <span>{this.propse.details.name}</span>\n                          <button onClick = {()=>{this.toggleState(course.name)}} className=\"btn\">Edit Course</button>\n                          <button className=\"btn\" onClick={()=> {this.props.deleteCourse(this.props.index)}}>delete</button>\n                        </li>\n                      </Fragment>\n                    );\n                 })\n             }\n             \n            </ul>\n        )\n    }\n\n\n    // toggleState\n    toggleState = (courseName) => {\n        let { isEdit } = this.state;\n        this.setState({\n            isEdit: !isEdit\n        })\n    }\n\n    // render Update Form\n    renderUpdateForm = ()=>{\n    return (\n      <form>\n          <Fragment >\n                <li className=\"elements\">\n                    <span>{this.propse.details.name}</span>\n                    <input type=\"text\"/>\n                    <button>Update Course</button>\n                </li>\n          </Fragment> \n      </form>\n    )\n  }\n\n \n\n    \n    render() { \n\n        let {isEdit} = this.state;\n\n        return(\n           <Fragment>\n               { isEdit ? this.renderUpdateForm() : this.renderCourse()}\n           </Fragment>\n        )\n    }\n}\n \nexport default CourseList;"]},"metadata":{},"sourceType":"module"}